version: "3.7"

# Pulse Stack Additional Components
# MinIO, dbt, Great Expectations, and Healthcare PostgreSQL

networks:
  pulse-network:
    driver: bridge

services:
  # PostgreSQL Healthcare Database (separate from Airflow's)
  pulse-postgres:
    image: postgres:14
    container_name: pulse-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: healthcare
    ports:
      - "5433:5432"
    volumes:
      - pulse_pg_data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - pulse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d healthcare"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO - Data Lake Storage
  minio:
    image: minio/minio:latest
    container_name: pulse-minio
    restart: always
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - pulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client - Initialize buckets
  minio-init:
    image: minio/mc:latest
    container_name: pulse-minio-init
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - pulse-network
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minio minio123;
      mc mb myminio/bronze --ignore-existing;
      mc mb myminio/silver --ignore-existing;
      mc mb myminio/gold --ignore-existing;
      mc policy set public myminio/bronze;
      mc policy set public myminio/silver;
      mc policy set public myminio/gold;
      exit 0;
      "

  # dbt - Data Transformation
  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.7.0
    container_name: pulse-dbt
    volumes:
      - ./dbt:/usr/app/dbt
    working_dir: /usr/app/dbt
    networks:
      - pulse-network
    command: tail -f /dev/null
    depends_on:
      pulse-postgres:
        condition: service_healthy

  # Great Expectations - Data Quality
  great_expectations:
    image: python:3.9-slim
    container_name: pulse-great-expectations
    volumes:
      - ./great_expectations:/app
    working_dir: /app
    networks:
      - pulse-network
    command: >
      bash -c "
      pip install great_expectations==0.18.15 sqlalchemy psycopg2-binary pandas &&
      tail -f /dev/null
      "
    depends_on:
      pulse-postgres:
        condition: service_healthy

  # Superset - BI and Visualization
  superset:
    image: apache/superset:latest
    container_name: pulse-superset
    restart: always
    environment:
      SUPERSET_ENV: development
      DATABASE_HOST: pulse-postgres
      SUPERSET_SECRET_KEY: 'your-very-long-secret-key-here-change-in-production-at-least-32-bytes-long-and-more'
      SUPERSET_FEATURE_GLOBAL_ASYNC_QUERIES: 'false'
    ports:
      - "8088:8088"
    volumes:
      - ./superset:/app/superset_home
      - ./superset/superset_config.py:/app/pythonpath/superset_config.py
    networks:
      - pulse-network
    depends_on:
      pulse-postgres:
        condition: service_healthy
    command: >
      bash -c "
      pip install psycopg2-binary &&
      superset db upgrade && 
      superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin || true &&
      superset init && 
      gunicorn --bind 0.0.0.0:8088 'superset.app:create_app()'
      "

volumes:
  pulse_pg_data:
  minio_data: